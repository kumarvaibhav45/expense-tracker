{"version":3,"sources":["components/Header/index.jsx","context/AppReducer.js","context/GlobalState.js","components/IncomeExpense/index.jsx","components/Balance/index.jsx","components/Transaction/index.jsx","components/TransactionList/index.jsx","components/AddTransaction/index.jsx","App.js","index.js"],"names":["Header","className","state","type","payload","transactions","filter","transaction","id","initialState","GlobalState","createContext","GlobalStateProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","IncomeExpense","amounts","useContext","map","amount","income","item","reduce","acc","toFixed","expense","Balance","total","Transaction","name","Math","abs","onClick","TransactionList","length","key","AddTransaction","useState","setName","setAmount","hideForm","setHideForm","moneyType","setMoneyType","inputError","setInputError","prevState","onSubmit","e","preventDefault","amt","charAt","newTransaction","floor","random","htmlFor","required","placeholder","onChange","target","selectedIndex","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7400e90e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className='navbar'>\n      <h2>expense tracker</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","export default (state, { type, payload }) => {\n  switch (type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transaction.id !== payload\n        )\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [...state.transactions, payload]\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\nconst initialState = {\n  transactions: []\n};\n\nexport const GlobalState = createContext(initialState);\n\nexport const GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  };\n  const addTransaction = transaction => {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  };\n  return (\n    <GlobalState.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n      }}\n    >\n      {children}\n    </GlobalState.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalState } from '../../context/GlobalState';\n\nconst IncomeExpense = () => {\n  const { transactions } = useContext(GlobalState);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n  return (\n    <div className='money-container'>\n      <div>\n        <h4>Income</h4>\n        <p className='money income'>{income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className='money expense'>{expense}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpense;\n","import React, { useContext } from 'react';\nimport { GlobalState } from '../../context/GlobalState';\n\nconst Balance = () => {\n  const { transactions } = useContext(GlobalState);\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  return (\n    <>\n      <h4>your balance</h4>\n      <h1>${total}</h1>\n    </>\n  );\n};\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { GlobalState } from '../../context/GlobalState';\n\nconst Transaction = ({ transaction: { id, amount, name } }) => {\n  const { deleteTransaction } = useContext(GlobalState);\n  return (\n    <li className={amount < 0 ? 'expense' : 'income'}>\n      {name}\n      <span>\n        {amount < 0 ? '-' : '+'}${Math.abs(amount)}\n      </span>\n      <button className='delete-btn' onClick={() => deleteTransaction(id)}>\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default Transaction;\n","import React, { useContext } from 'react';\nimport Transaction from '../Transaction';\nimport { GlobalState } from '../../context/GlobalState';\n\nconst TransactionList = () => {\n  const { transactions } = useContext(GlobalState);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className='list'>\n        {transactions.length < 1 ? (\n          <p>No transaction tistory!</p>\n        ) : (\n          transactions.map(transaction => (\n            <Transaction key={transaction.id} transaction={transaction} />\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default TransactionList;\n","import React, { useContext, useState } from 'react';\nimport { GlobalState } from '../../context/GlobalState';\n\nconst AddTransaction = () => {\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState('0');\n  const [hideForm, setHideForm] = useState(false);\n  const [moneyType, setMoneyType] = useState(0);\n  const [inputError, setInputError] = useState('');\n  const { addTransaction } = useContext(GlobalState);\n  const onSubmit = e => {\n    e.preventDefault();\n    if (moneyType === 0 || moneyType === '0') {\n      setInputError('please select type of money!');\n      return;\n    }\n    let amt = amount;\n    if (amt.charAt(0) === '-') {\n      amt = -amt;\n    }\n    if (moneyType === 1) {\n      amt = +amt;\n    } else if (moneyType === 2) {\n      amt = -amt;\n    }\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      name,\n      amount: +amt\n    };\n    addTransaction(newTransaction);\n    setName('');\n    setAmount('');\n    setInputError('');\n  };\n\n  return (\n    <>\n      <button\n        className='btn hide-btn'\n        onClick={() => setHideForm(prevState => !prevState)}\n      >\n        {hideForm ? 'show' : 'hide'} form\n      </button>\n      {!hideForm && (\n        <>\n          <h3>Add new transaction</h3>\n          <form onSubmit={onSubmit}>\n            <div className='form-control'>\n              <label htmlFor='name'>Name</label>\n              <input\n                required\n                type='text'\n                value={name}\n                placeholder='Enter Name...'\n                onChange={({ target: { value } }) => setName(value)}\n              />\n            </div>\n            <div className='form-control'>\n              <label htmlFor='amount'>\n                Amount <small>(numbers only)</small>\n              </label>\n              <input\n                required\n                type='number'\n                value={amount}\n                placeholder='Enter Amount...'\n                onChange={({ target: { value } }) => setAmount(value)}\n              />\n            </div>\n            <div className='form-control'>\n              <select\n                required\n                value={moneyType}\n                onChange={({ target: { selectedIndex } }) =>\n                  setMoneyType(selectedIndex)\n                }\n              >\n                <option value='0' disabled>\n                  Select Type:\n                </option>\n                <option value='1'>Income</option>\n                <option value='2'>Expense</option>\n              </select>\n            </div>\n            <small className='error-msg'>{inputError}</small>\n            <button type='submit' className='btn'>\n              add transaction\n            </button>\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AddTransaction;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport IncomeExpense from './components/IncomeExpense';\nimport Balance from './components/Balance';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalStateProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}